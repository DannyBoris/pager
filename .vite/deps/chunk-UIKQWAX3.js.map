{
  "version": 3,
  "sources": ["../../node_modules/@dicebear/core/lib/utils/license.js", "../../node_modules/@dicebear/core/lib/utils/escape.js", "../../node_modules/@dicebear/core/lib/utils/prng.js", "../../node_modules/@dicebear/core/lib/utils/svg.js", "../../node_modules/@dicebear/core/lib/schema.js", "../../node_modules/@dicebear/core/lib/utils/options.js", "../../node_modules/@dicebear/converter/lib/utils/mime-type.js", "../../node_modules/@dicebear/converter/lib/utils/svg.js", "../../node_modules/@dicebear/converter/lib/utils/text.js", "../../node_modules/@dicebear/converter/lib/core.js", "../../node_modules/@dicebear/core/lib/utils/color.js", "../../node_modules/@dicebear/core/lib/core.js"],
  "sourcesContent": ["import * as _ from './escape.js';\nexport function xml(style) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    const title = (_b = (_a = style.meta) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : 'Unnamed';\n    const creator = (_d = (_c = style.meta) === null || _c === void 0 ? void 0 : _c.creator) !== null && _d !== void 0 ? _d : 'Unknown';\n    let description = `\"${title}\" by \"${creator}\"`;\n    if ((_f = (_e = style.meta) === null || _e === void 0 ? void 0 : _e.license) === null || _f === void 0 ? void 0 : _f.name) {\n        description += `, licensed under \"${style.meta.license.name}\".`;\n    }\n    description += ' / Remix of the original. - Created with dicebear.com';\n    const xmlTitle = `<dc:title>${_.xml(title)}</dc:title>`;\n    const xmlCreator = '<dc:creator>' +\n        `<cc:Agent rdf:about=\"${_.xml((_h = (_g = style.meta) === null || _g === void 0 ? void 0 : _g.homepage) !== null && _h !== void 0 ? _h : '')}\">` +\n        `<dc:title>${_.xml(creator)}</dc:title>` +\n        '</cc:Agent>' +\n        '</dc:creator>';\n    const xmlSource = ((_j = style.meta) === null || _j === void 0 ? void 0 : _j.source)\n        ? `<dc:source>${_.xml(style.meta.source)}</dc:source>`\n        : '';\n    const xmlLicense = ((_l = (_k = style.meta) === null || _k === void 0 ? void 0 : _k.license) === null || _l === void 0 ? void 0 : _l.url)\n        ? `<cc:license rdf:resource=\"${_.xml(style.meta.license.url)}\" />`\n        : '';\n    return (`<desc>${description}</desc>` +\n        '<metadata' +\n        ' xmlns:dc=\"http://purl.org/dc/elements/1.1/\"' +\n        ' xmlns:cc=\"http://creativecommons.org/ns#\"' +\n        ' xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">' +\n        '<rdf:RDF>' +\n        '<cc:Work>' +\n        xmlTitle +\n        xmlCreator +\n        xmlSource +\n        xmlLicense +\n        '</cc:Work>' +\n        '</rdf:RDF>' +\n        '</metadata>');\n}\nexport function exif(style) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const title = (_b = (_a = style.meta) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : 'Unnamed';\n    const creator = (_d = (_c = style.meta) === null || _c === void 0 ? void 0 : _c.creator) !== null && _d !== void 0 ? _d : 'Unknown';\n    let copyright = `\"${title}\" by \"${creator}\"`;\n    if ((_f = (_e = style.meta) === null || _e === void 0 ? void 0 : _e.license) === null || _f === void 0 ? void 0 : _f.name) {\n        copyright += `, licensed under \"${style.meta.license.name}\".`;\n    }\n    copyright += ' / Remix of the original.';\n    const exif = {\n        ImageDescription: `${copyright} - Created with dicebear.com`,\n        Copyright: copyright,\n        'XMP-dc:Title': title,\n        'XMP-dc:Creator': creator,\n    };\n    if ((_g = style.meta) === null || _g === void 0 ? void 0 : _g.source) {\n        exif['XMP-dc:Source'] = style.meta.source;\n    }\n    if ((_j = (_h = style.meta) === null || _h === void 0 ? void 0 : _h.license) === null || _j === void 0 ? void 0 : _j.url) {\n        exif['XMP-cc:License'] = style.meta.license.url;\n    }\n    return exif;\n}\n", "export function xml(content) {\n    return content\n        .replace(/&/g, '&amp;')\n        .replace(/'/g, '&apos;')\n        .replace(/\"/g, '&quot;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\n", "const MIN = -2147483648;\nconst MAX = 2147483647;\nfunction xorshift(value) {\n    value ^= value << 13;\n    value ^= value >> 17;\n    value ^= value << 5;\n    return value;\n}\nfunction hashSeed(seed) {\n    let hash = 0;\n    for (let i = 0; i < seed.length; i++) {\n        hash = ((hash << 5) - hash + seed.charCodeAt(i)) | 0;\n        hash = xorshift(hash);\n    }\n    return hash;\n}\nexport function create(seed = '') {\n    // Ensure that seed is a string\n    seed = seed.toString();\n    let value = hashSeed(seed) || 1;\n    const next = () => (value = xorshift(value));\n    const integer = (min, max) => {\n        return Math.floor(((next() - MIN) / (MAX - MIN)) * (max + 1 - min) + min);\n    };\n    return {\n        seed,\n        next,\n        bool(likelihood = 50) {\n            return integer(0, 100) <= likelihood;\n        },\n        integer(min, max) {\n            return integer(min, max);\n        },\n        pick(arr, fallback) {\n            var _a;\n            if (arr.length === 0) {\n                next();\n                return fallback;\n            }\n            return (_a = arr[integer(0, arr.length - 1)]) !== null && _a !== void 0 ? _a : fallback;\n        },\n        shuffle(arr) {\n            // Each method call should call the `next` function only once.\n            // Therefore, we use a separate instance of the PRNG here.\n            const internalPrng = create(next().toString());\n            return arr.sort(() => internalPrng.integer(-1, 1));\n        },\n        string(length, characters = 'abcdefghijklmnopqrstuvwxyz1234567890') {\n            // Each method call should call the `next` function only once.\n            // Therefore, we use a separate instance of the PRNG here.\n            const internalPrng = create(next().toString());\n            let str = '';\n            for (let i = 0; i < length; i++) {\n                str += characters[internalPrng.integer(0, characters.length - 1)];\n            }\n            return str;\n        },\n    };\n}\n", "import * as escape from './escape.js';\nimport { create as createPrng } from './prng.js';\nexport function getViewBox(result) {\n    let viewBox = result.attributes['viewBox'].split(' ');\n    let x = parseInt(viewBox[0]);\n    let y = parseInt(viewBox[1]);\n    let width = parseInt(viewBox[2]);\n    let height = parseInt(viewBox[3]);\n    return {\n        x,\n        y,\n        width,\n        height,\n    };\n}\nexport function addBackground(result, primaryColor, secondaryColor, type, rotation) {\n    let { width, height, x, y } = getViewBox(result);\n    const solidBackground = `<rect fill=\"${primaryColor}\" width=\"${width}\" height=\"${height}\" x=\"${x}\" y=\"${y}\" />`;\n    switch (type) {\n        case 'solid':\n            return solidBackground + result.body;\n        case 'gradientLinear':\n            return (`<rect fill=\"url(#backgroundLinear)\" width=\"${width}\" height=\"${height}\" x=\"${x}\" y=\"${y}\" />` +\n                `<defs>` +\n                `<linearGradient id=\"backgroundLinear\" gradientTransform=\"rotate(${rotation} 0.5 0.5)\">` +\n                `<stop stop-color=\"${primaryColor}\"/>` +\n                `<stop offset=\"1\" stop-color=\"${secondaryColor}\"/>` +\n                `</linearGradient>` +\n                `</defs>` +\n                result.body);\n    }\n}\nexport function addScale(result, scale) {\n    let { width, height, x, y } = getViewBox(result);\n    let percent = scale ? (scale - 100) / 100 : 0;\n    let translateX = (width / 2 + x) * percent * -1;\n    let translateY = (height / 2 + y) * percent * -1;\n    return `<g transform=\"translate(${translateX} ${translateY}) scale(${scale / 100})\">${result.body}</g>`;\n}\nexport function addTranslate(result, x, y) {\n    let viewBox = getViewBox(result);\n    let translateX = (viewBox.width + viewBox.x * 2) * ((x !== null && x !== void 0 ? x : 0) / 100);\n    let translateY = (viewBox.height + viewBox.y * 2) * ((y !== null && y !== void 0 ? y : 0) / 100);\n    return `<g transform=\"translate(${translateX} ${translateY})\">${result.body}</g>`;\n}\nexport function addRotate(result, rotate) {\n    let { width, height, x, y } = getViewBox(result);\n    return `<g transform=\"rotate(${rotate}, ${width / 2 + x}, ${height / 2 + y})\">${result.body}</g>`;\n}\nexport function addFlip(result) {\n    let { width, x } = getViewBox(result);\n    return `<g transform=\"scale(-1 1) translate(${width * -1 - x * 2} 0)\">${result.body}</g>`;\n}\nexport function addViewboxMask(result, radius) {\n    let { width, height, x, y } = getViewBox(result);\n    let rx = radius ? (width * radius) / 100 : 0;\n    let ry = radius ? (height * radius) / 100 : 0;\n    return (`<mask id=\"viewboxMask\">` +\n        `<rect width=\"${width}\" height=\"${height}\" rx=\"${rx}\" ry=\"${ry}\" x=\"${x}\" y=\"${y}\" fill=\"#fff\" />` +\n        `</mask>` +\n        `<g mask=\"url(#viewboxMask)\">${result.body}</g>`);\n}\nexport function createAttrString(result) {\n    const attributes = {\n        xmlns: 'http://www.w3.org/2000/svg',\n        ...result.attributes,\n    };\n    return Object.keys(attributes)\n        .map((attr) => `${escape.xml(attr)}=\"${escape.xml(attributes[attr])}\"`)\n        .join(' ');\n}\nexport function randomizeIds(result) {\n    const prng = createPrng();\n    const ids = {};\n    return result.body.replace(/(id=\"|url\\(#)([a-z0-9-_]+)([\")])/gi, (match, m1, m2, m3) => {\n        ids[m2] = ids[m2] || prng.string(8);\n        return `${m1}${ids[m2]}${m3}`;\n    });\n}\n", "export const schema = {\n    type: 'object',\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    properties: {\n        seed: {\n            type: 'string',\n        },\n        flip: {\n            type: 'boolean',\n            default: false,\n        },\n        rotate: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 360,\n            default: 0,\n        },\n        scale: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 200,\n            default: 100,\n        },\n        radius: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 50,\n            default: 0,\n        },\n        size: {\n            type: 'integer',\n            minimum: 1,\n        },\n        backgroundColor: {\n            type: 'array',\n            items: {\n                type: 'string',\n                pattern: '^(transparent|[a-fA-F0-9]{6})$',\n            },\n        },\n        backgroundType: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['solid', 'gradientLinear'],\n            },\n            default: ['solid'],\n        },\n        backgroundRotation: {\n            type: 'array',\n            items: {\n                type: 'integer',\n                minimum: -360,\n                maximum: 360,\n            },\n            default: [\n                0, 360,\n            ],\n        },\n        translateX: {\n            type: 'integer',\n            minimum: -100,\n            maximum: 100,\n            default: 0,\n        },\n        translateY: {\n            type: 'integer',\n            minimum: -100,\n            maximum: 100,\n            default: 0,\n        },\n        clip: {\n            type: 'boolean',\n            default: true,\n        },\n        randomizeIds: {\n            type: 'boolean',\n            default: false,\n        },\n    },\n};\n", "import { schema } from '../schema.js';\nexport function defaults(schema) {\n    var _a;\n    let result = {};\n    let props = (_a = schema.properties) !== null && _a !== void 0 ? _a : {};\n    Object.keys(props).forEach((key) => {\n        let val = props[key];\n        if (typeof val === 'object' && undefined !== val.default) {\n            if (Array.isArray(val.default)) {\n                result[key] = [...val.default];\n            }\n            else if (typeof val.default === 'object') {\n                result[key] = { ...val.default };\n            }\n            else {\n                result[key] = val.default;\n            }\n        }\n    });\n    return result;\n}\nexport function merge(style, options) {\n    var _a;\n    let result = {\n        ...defaults(schema),\n        ...defaults((_a = style.schema) !== null && _a !== void 0 ? _a : {}),\n        ...options,\n    };\n    // Return a complete copy because the styles could partially customize the\n    // options and thus modify nested objects and arrays.\n    return JSON.parse(JSON.stringify(result));\n}\n", "export function getMimeType(format) {\n    switch (format) {\n        case 'svg':\n            return 'image/svg+xml';\n        case 'png':\n        case 'jpeg':\n            return `image/${format}`;\n        default:\n            throw new Error(`Unsupported format: ${format}`);\n    }\n}\n", "export function ensureSize(svg, defaultSize = 512) {\n    let size = defaultSize;\n    svg = svg.replace(/<svg([^>]*)/, (match, g1) => {\n        const found = g1.match(/width=\"([^\"]+)\"/);\n        if (found) {\n            size = parseInt(found[1]);\n        }\n        if (g1.match(/width=\"([^\"]+)\"/)) {\n            g1 = g1.replace(/width=\"([^\"]+)\"/, `width=\"${size}\"`);\n        }\n        else {\n            g1 += ` width=\"${size}\"`;\n        }\n        if (g1.match(/height=\"([^\"]+)\"/)) {\n            g1 = g1.replace(/height=\"([^\"]+)\"/, `height=\"${size}\"`);\n        }\n        else {\n            g1 += ` height=\"${size}\"`;\n        }\n        return `<svg${g1}`;\n    });\n    return { svg, size };\n}\n", "let encoder;\nexport function getEncoder() {\n    if (!encoder) {\n        encoder = new TextEncoder();\n    }\n    return encoder;\n}\n", "import { getMimeType } from './utils/mime-type.js';\nimport { ensureSize } from './utils/svg.js';\nimport { getEncoder } from './utils/text.js';\nexport const toFormat = function (svg, format, exif) {\n    return {\n        toDataUri: () => toDataUri(svg, format, exif),\n        toFile: (name) => toFile(name, svg, format, exif),\n        toArrayBuffer: () => toArrayBuffer(svg, format, exif),\n    };\n};\nasync function toDataUri(svg, format, exif) {\n    if ('svg' === format) {\n        return `data:${getMimeType(format)};utf8,${encodeURIComponent(svg)}`;\n    }\n    const canvas = await toCanvas(svg, format, exif);\n    return canvas.toDataURL(getMimeType(format));\n}\nasync function toArrayBuffer(rawSvg, format, exif) {\n    if ('svg' === format) {\n        return getEncoder().encode(rawSvg);\n    }\n    const canvas = await toCanvas(rawSvg, format, exif);\n    return await new Promise((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            blob\n                ? resolve(blob.arrayBuffer())\n                : reject(new Error('Could not create blob'));\n        }, getMimeType(format));\n    });\n}\nasync function toFile(name, svg, format, exif) {\n    const link = document.createElement('a');\n    link.href = await toDataUri(svg, format, exif);\n    link.download = name;\n    link.click();\n    link.remove();\n}\nasync function toCanvas(rawSvg, format, exif) {\n    if (exif) {\n        console.warn('The `exif` option is not supported in the browser version of `@dicebear/converter`. \\n' +\n            'Please use the node version of `@dicebear/converter` to generate images with exif data.');\n    }\n    let { svg, size } = ensureSize(rawSvg);\n    const canvas = document.createElement('canvas');\n    canvas.width = size;\n    canvas.height = size;\n    const context = canvas.getContext('2d');\n    if (null === context) {\n        throw new Error('Could not get canvas context');\n    }\n    if (format === 'jpeg') {\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, size, size);\n    }\n    var img = document.createElement('img');\n    img.width = size;\n    img.height = size;\n    img.setAttribute('src', await toDataUri(svg, 'svg'));\n    return new Promise((resolve, reject) => {\n        img.onload = () => {\n            context.drawImage(img, 0, 0, size, size);\n            resolve(canvas);\n        };\n        img.onerror = (e) => reject(e);\n    });\n}\n", "export function convertColor(color) {\n    return 'transparent' === color ? color : `#${color}`;\n}\nexport function getBackgroundColors(prng, backgroundColor) {\n    var _a;\n    let shuffledBackgroundColors;\n    if (backgroundColor.length <= 2) {\n        // A function call should in any case make an identical number of calls to the PRNG.\n        prng.next();\n        shuffledBackgroundColors = backgroundColor;\n    }\n    else {\n        shuffledBackgroundColors = prng.shuffle(backgroundColor);\n    }\n    if (shuffledBackgroundColors.length === 0) {\n        shuffledBackgroundColors = ['transparent'];\n    }\n    const primary = shuffledBackgroundColors[0];\n    const secondary = (_a = shuffledBackgroundColors[1]) !== null && _a !== void 0 ? _a : shuffledBackgroundColors[0];\n    return {\n        primary: convertColor(primary),\n        secondary: convertColor(secondary),\n    };\n}\n", "import * as svgUtils from './utils/svg.js';\nimport { merge as mergeOptions } from './utils/options.js';\nimport { create as createPrng } from './utils/prng.js';\nimport * as license from './utils/license.js';\nimport { toFormat } from '@dicebear/converter';\nimport { getBackgroundColors } from './utils/color.js';\nexport function createAvatar(style, options = {}) {\n    var _a, _b, _c, _d, _e;\n    options = mergeOptions(style, options);\n    const prng = createPrng(options.seed);\n    const result = style.create({ prng: prng, options });\n    const { primary: primaryBackgroundColor, secondary: secondaryBackgroundColor, } = getBackgroundColors(prng, (_a = options.backgroundColor) !== null && _a !== void 0 ? _a : []);\n    const backgroundType = prng.pick((_b = options.backgroundType) !== null && _b !== void 0 ? _b : [], 'solid');\n    const backgroundRotation = prng.integer(((_c = options.backgroundRotation) === null || _c === void 0 ? void 0 : _c.length) ? Math.min(...options.backgroundRotation) : 0, ((_d = options.backgroundRotation) === null || _d === void 0 ? void 0 : _d.length) ? Math.max(...options.backgroundRotation) : 0);\n    if (options.size) {\n        result.attributes.width = options.size.toString();\n        result.attributes.height = options.size.toString();\n    }\n    if (options.scale !== undefined && options.scale !== 100) {\n        result.body = svgUtils.addScale(result, options.scale);\n    }\n    if (options.flip) {\n        result.body = svgUtils.addFlip(result);\n    }\n    if (options.rotate) {\n        result.body = svgUtils.addRotate(result, options.rotate);\n    }\n    if (options.translateX || options.translateY) {\n        result.body = svgUtils.addTranslate(result, options.translateX, options.translateY);\n    }\n    if (primaryBackgroundColor !== 'transparent' &&\n        secondaryBackgroundColor !== 'transparent') {\n        result.body = svgUtils.addBackground(result, primaryBackgroundColor, secondaryBackgroundColor, backgroundType, backgroundRotation);\n    }\n    if (options.radius || options.clip) {\n        result.body = svgUtils.addViewboxMask(result, (_e = options.radius) !== null && _e !== void 0 ? _e : 0);\n    }\n    if (options.randomizeIds) {\n        // Reduces the occurrence of ID collisions when rendering multiple avatars on one HTML page.\n        result.body = svgUtils.randomizeIds(result);\n    }\n    const attributes = svgUtils.createAttrString(result);\n    const metadata = license.xml(style);\n    const exif = license.exif(style);\n    const svg = `<svg ${attributes}>${metadata}${result.body}</svg>`;\n    return {\n        toString: () => svg,\n        toJson: () => {\n            var _a;\n            return ({\n                svg: svg,\n                extra: {\n                    primaryBackgroundColor,\n                    secondaryBackgroundColor,\n                    backgroundType,\n                    backgroundRotation,\n                    ...(_a = result.extra) === null || _a === void 0 ? void 0 : _a.call(result),\n                },\n            });\n        },\n        toDataUriSync: () => {\n            return `data:image/svg+xml;utf8,${encodeURIComponent(svg)}`;\n        },\n        ...toFormat(svg, 'svg'),\n        png: ({ includeExif = false } = {}) => {\n            return toFormat(svg, 'png', includeExif ? exif : undefined);\n        },\n        jpeg: ({ includeExif = false } = {}) => {\n            return toFormat(svg, 'jpeg', includeExif ? exif : undefined);\n        },\n    };\n}\n"],
  "mappings": "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",
  "names": ["xml", "xml", "exif", "schema", "exif", "xml", "exif", "_a"]
}
